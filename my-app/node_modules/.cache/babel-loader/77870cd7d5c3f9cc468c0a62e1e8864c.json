{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilia\\\\dev\\\\mesto-react\\\\my-app\\\\src\\\\components\\\\EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Popup from \"./Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  const {\n    loader,\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = props; //    const currentUser = useContext(CurrentUserContext)\n  //    useEffect(() => {\n  //        setName(currentUser.name || '');\n  //        setDescription(currentUser.about || '');\n  //    }, [currentUser])\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    onClose: onClose,\n    isOpen: isOpen,\n    children: /*#__PURE__*/_jsxDEV(PopupWithForm, {\n      name: \"edit\",\n      title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n      buttonText: loader ? \"Сохранение...\" : \"Сохранить\",\n      onClose: onClose,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__form-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"popup__input popup__input_value_name\",\n          id: \"name-input\",\n          type: \"text\",\n          name: \"name\",\n          required: true,\n          minLength: \"2\",\n          maxLength: \"40\",\n          autoComplete: \"off\",\n          placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__input-error name-input-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"popup__form-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"popup__input popup__input_value_about\",\n          id: \"about-input\",\n          type: \"text\",\n          name: \"about\",\n          required: true,\n          minLength: \"2\",\n          maxLength: \"200\",\n          autoComplete: \"off\",\n          placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"popup__input-error about-input-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"mnwQBeDFN/kGzccNxCLcYLb7zpM=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["C:/Users/Ilia/dev/mesto-react/my-app/src/components/EditProfilePopup.js"],"names":["useState","useEffect","useContext","PopupWithForm","CurrentUserContext","Popup","EditProfilePopup","props","loader","isOpen","onClose","onUpdateUser","name","setName","description","setDescription","handleSubmit","evt","preventDefault","about","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,MAAV;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAA4CJ,KAAlD,CAD6B,CAGjC;AAEA;AACA;AACA;AACA;;AAEI,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;;AAEA,WAASgB,YAAT,CAAsBC,GAAtB,EAA2B;AACvBA,IAAAA,GAAG,CAACC,cAAJ;AACAP,IAAAA,YAAY,CAAC;AACTC,MAAAA,IADS;AAETO,MAAAA,KAAK,EAAEL;AAFE,KAAD,CAAZ;AAIH;;AAED,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAEJ,OADb;AAEI,IAAA,MAAM,EAAED,MAFZ;AAAA,2BAII,QAAC,aAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAC,2HAFV;AAGI,MAAA,UAAU,EAAED,MAAM,GAAG,eAAH,GAAqB,WAH3C;AAII,MAAA,OAAO,EAAEE,OAJb;AAKI,MAAA,QAAQ,EAAEM,YALd;AAAA,8BAOI;AAAO,QAAA,SAAS,EAAC,mBAAjB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,sCAAjB;AAAwD,UAAA,EAAE,EAAC,YAA3D;AAAwE,UAAA,IAAI,EAAC,MAA7E;AAAoF,UAAA,IAAI,EAAC,MAAzF;AAAgG,UAAA,QAAQ,MAAxG;AAAyG,UAAA,SAAS,EAAC,GAAnH;AAAuH,UAAA,SAAS,EAAC,IAAjI;AAAsI,UAAA,YAAY,EAAC,KAAnJ;AAAyJ,UAAA,WAAW,EAAC,6CAArK;AAAgL,UAAA,KAAK,EAAEJ,IAAvL;AAA6L,UAAA,QAAQ,EAAEQ,CAAC,IAAIP,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnN;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAWI;AAAO,QAAA,SAAS,EAAC,mBAAjB;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,uCAAjB;AAAyD,UAAA,EAAE,EAAC,aAA5D;AAA0E,UAAA,IAAI,EAAC,MAA/E;AAAsF,UAAA,IAAI,EAAC,OAA3F;AAAmG,UAAA,QAAQ,MAA3G;AAA4G,UAAA,SAAS,EAAC,GAAtH;AAA0H,UAAA,SAAS,EAAC,KAApI;AAA0I,UAAA,YAAY,EAAC,KAAvJ;AAA6J,UAAA,WAAW,EAAC,iCAAzK;AAAkL,UAAA,KAAK,EAAER,WAAzL;AAAsM,UAAA,QAAQ,EAAEM,CAAC,IAAIL,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAAnO;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GA7CQhB,gB;;KAAAA,gB;AA+CT,eAAeA,gBAAf","sourcesContent":["import { useState, useEffect, useContext } from \"react\"\r\nimport PopupWithForm from \"./PopupWithForm\"\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\"\r\nimport Popup from \"./Popup\"\r\n\r\nfunction EditProfilePopup(props) {\r\n    const { loader, isOpen, onClose, onUpdateUser } = props\r\n\r\n//    const currentUser = useContext(CurrentUserContext)\r\n\r\n//    useEffect(() => {\r\n//        setName(currentUser.name || '');\r\n//        setDescription(currentUser.about || '');\r\n//    }, [currentUser])\r\n\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault()\r\n        onUpdateUser({\r\n            name,\r\n            about: description\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Popup\r\n            onClose={onClose}\r\n            isOpen={isOpen}\r\n        >\r\n            <PopupWithForm\r\n                name=\"edit\"\r\n                title=\"Редактировать профиль\"\r\n                buttonText={loader ? \"Сохранение...\" : \"Сохранить\"}\r\n                onClose={onClose}\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <label className=\"popup__form-label\">\r\n                    <input className=\"popup__input popup__input_value_name\" id=\"name-input\" type=\"text\" name=\"name\" required minLength=\"2\" maxLength=\"40\" autoComplete=\"off\" placeholder=\"Ваше имя\" value={name} onChange={e => setName(e.target.value)}/>\r\n                    <span className=\"popup__input-error name-input-error\"></span>\r\n                </label>\r\n                <label className=\"popup__form-label\">\r\n                    <input className=\"popup__input popup__input_value_about\" id=\"about-input\" type=\"text\" name=\"about\" required minLength=\"2\" maxLength=\"200\" autoComplete=\"off\" placeholder=\"О себе\" value={description} onChange={e => setDescription(e.target.value)}/>\r\n                    <span className=\"popup__input-error about-input-error\"></span>\r\n                </label>\r\n            </PopupWithForm>\r\n        </Popup>\r\n\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup"]},"metadata":{},"sourceType":"module"}