{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ilia\\\\dev\\\\mesto-react\\\\my-app\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport Api from \"../components/Utils/Api\";\nimport { optionsApi } from \"../components/Utils/optionsApi\";\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = new Api(optionsApi);\n\nfunction App() {\n  _s();\n\n  // Состояние попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isComfirmDeletePopupOpen, setIsComfirmDeletePopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({\n    isOpen: false\n  }); // Состояние загрузчиков\n  //const [isLoadingButton, setIsLoadingButton] = useState(false)\n  // Данные пользовотеля и карточек\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]); // ID Карточки\n\n  const [cardId, setCardId] = useState(''); // Запрос данных пользователя и карточек с сервера\n\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()]).then(res => {\n      setCurrentUser(res[0]);\n      setCards(res[1]);\n    }).catch(err => console.log(\"Не удалось загрузить страницу:\", err));\n  }, []); // Управление состоянием попапов\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleComfirmDeleteClick(card) {\n    setIsComfirmDeletePopupOpen(true);\n    setCardId(card._id);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsComfirmDeletePopupOpen(false);\n    setSelectedCard({\n      isOpen: false\n    });\n  } // Открыть большую карточку\n\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpen: true,\n      ...card\n    });\n  } // Обновить данные пользователя\n\n\n  function handleUpdateUser(data) {\n    setIsLoadingButton(true);\n    api.editUserInfo(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(\"Не удалось изменить данные профиля:\", err)).finally(() => setIsLoadingButton(false));\n  } // Обновить аватар пользователя\n\n\n  function handleUpdateAvatar(data) {\n    setIsLoadingButton(true);\n    api.editUserAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(\"Не удалось сменить аватар:\", err)).finally(() => setIsLoadingButton(false));\n  } // Управление лайком карточки\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(\"Не удалось изменить лайк:\", err));\n  } // Управление удалением карточки\n\n\n  function handleCardDelete() {\n    setIsLoadingButton(true);\n    api.deleteCard(cardId).then(() => {\n      setCards(cards.filter(c => c._id !== cardId));\n      closeAllPopups();\n    }).catch(err => console.log(\"Не удалось удалить карточку:\", err)).finally(() => setIsLoadingButton(false));\n  } // Управление добавлением карточки\n\n\n  function handleAddPlaceSubmit(data) {\n    setIsLoadingButton(true);\n    api.addCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(\"Не удалось добавить карточку:\", err)).finally(() => setIsLoadingButton(false));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onEditAvatar: handleEditAvatarClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleComfirmDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n      isOpen: isEditProfilePopupOpen,\n      onClose: closeAllPopups,\n      onUpdateUser: handleUpdateUser,\n      loader: isLoadingButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n      isOpen: isEditAvatarPopupOpen,\n      onClose: closeAllPopups,\n      onUpdateAvatar: handleUpdateAvatar,\n      loader: isLoadingButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n      isOpen: isAddPlacePopupOpen,\n      onClose: closeAllPopups,\n      onAddPlace: handleAddPlaceSubmit,\n      loader: isLoadingButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmDeletePopup, {\n      isOpen: isComfirmDeletePopupOpen,\n      onClose: closeAllPopups,\n      onDelete: handleCardDelete,\n      loader: isLoadingButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      card: selectedCard,\n      onClose: closeAllPopups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7ftpAAxHg4eiGIeaM+nWOF1R//8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ilia/dev/mesto-react/my-app/src/components/App.js"],"names":["useState","useEffect","Header","Main","Footer","Api","optionsApi","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ConfirmDeletePopup","api","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isComfirmDeletePopupOpen","setIsComfirmDeletePopupOpen","selectedCard","setSelectedCard","isOpen","currentUser","setCurrentUser","cards","setCards","cardId","setCardId","Promise","all","getUserInfo","getInitialCards","then","res","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleComfirmDeleteClick","card","_id","closeAllPopups","handleCardClick","handleUpdateUser","data","setIsLoadingButton","editUserInfo","finally","handleUpdateAvatar","editUserAvatar","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit","addCard","isLoadingButton"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nimport Api from \"../components/Utils/Api\"\nimport { optionsApi } from \"../components/Utils/optionsApi\"\nimport ImagePopup from './ImagePopup'\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\n\n\nconst api = new Api(optionsApi)\n\nfunction App() {\n\n  // Состояние попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isComfirmDeletePopupOpen, setIsComfirmDeletePopupOpen] = useState(false)\n  const [selectedCard, setSelectedCard] = useState({ isOpen: false })\n\n  // Состояние загрузчиков\n  //const [isLoadingButton, setIsLoadingButton] = useState(false)\n\n  // Данные пользовотеля и карточек\n  const [currentUser, setCurrentUser] = useState({})\n  const [cards, setCards] = useState([])\n\n  // ID Карточки\n  const [cardId, setCardId] = useState('')\n\n  // Запрос данных пользователя и карточек с сервера\n  useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(res => {\n        setCurrentUser(res[0])\n        setCards(res[1])\n      })\n      .catch(err => console.log(\"Не удалось загрузить страницу:\", err))\n  }, [])\n\n  // Управление состоянием попапов\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleComfirmDeleteClick(card) {\n    setIsComfirmDeletePopupOpen(true)\n    setCardId(card._id)\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setIsComfirmDeletePopupOpen(false)\n    setSelectedCard({ isOpen: false })\n  }\n\n  // Открыть большую карточку\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpen: true,\n      ...card\n    })\n  }\n\n  // Обновить данные пользователя\n  function handleUpdateUser(data) {\n    setIsLoadingButton(true)\n\n    api.editUserInfo(data)\n      .then(res => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch(err => console.log(\"Не удалось изменить данные профиля:\", err))\n      .finally(() => setIsLoadingButton(false))\n  }\n\n  // Обновить аватар пользователя\n  function handleUpdateAvatar(data) {\n    setIsLoadingButton(true)\n\n    api.editUserAvatar(data)\n      .then(res => {\n        setCurrentUser(res)\n        closeAllPopups()\n      })\n      .catch(err => console.log(\"Не удалось сменить аватар:\", err))\n      .finally(() => setIsLoadingButton(false))\n  }\n\n  // Управление лайком карточки\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      })\n      .catch(err => console.log(\"Не удалось изменить лайк:\", err))\n  }\n\n  // Управление удалением карточки\n  function handleCardDelete() {\n    setIsLoadingButton(true)\n\n    api.deleteCard(cardId)\n      .then(() => {\n        setCards(cards.filter(c => c._id !== cardId))\n        closeAllPopups()\n      })\n      .catch(err => console.log(\"Не удалось удалить карточку:\", err))\n      .finally(() => setIsLoadingButton(false))\n  }\n\n  // Управление добавлением карточки\n  function handleAddPlaceSubmit(data) {\n    setIsLoadingButton(true)\n\n    api.addCard(data)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n        closeAllPopups()\n      })\n      .catch(err => console.log(\"Не удалось добавить карточку:\", err))\n      .finally(() => setIsLoadingButton(false))\n  }\n  \n  return (\n    <div className=\"page\">\n      <div className=\"container\">\n        <Header/>\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleComfirmDeleteClick}          \n        />\n        <Footer/>\n      </div> \n       {/* Редактировать профиль */}\n      <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          loader={isLoadingButton}\n        />\n\n        {/* Изменить аватар */}\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n          loader={isLoadingButton}\n        />\n\n        {/* Добавить новое место */}\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          loader={isLoadingButton}\n        />\n\n        {/* Подтверждение удаления */}\n        <ConfirmDeletePopup \n          isOpen={isComfirmDeletePopupOpen}\n          onClose={closeAllPopups}\n          onDelete={handleCardDelete}\n          loader={isLoadingButton}\n        />\n\n        {/* Превью большой картинки */}\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        \n    </div>\n    \n  );\n  \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}