{"ast":null,"code":"export default class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _fetch(path, method, addBody) {\n    const url = this._baseUrl + path;\n    return fetch(url, {\n      method,\n      headers: this._headers,\n      body: addBody ? addBody() : null\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  _likeCard(cardId, method) {\n    return this._fetch(`cards/${cardId}/likes`, method);\n  }\n\n  getUserInfo() {\n    return this._fetch('users/me', 'GET');\n  }\n\n  getInitialCards() {\n    return this._fetch('cards', 'GET');\n  }\n\n  editUserInfo(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n\n    const addBody = () => {\n      return JSON.stringify({\n        name,\n        about\n      });\n    };\n\n    return this._fetch('users/me', 'PATCH', addBody);\n  }\n\n  addCard(_ref2) {\n    let {\n      name,\n      link\n    } = _ref2;\n\n    const addBody = () => {\n      return JSON.stringify({\n        name,\n        link\n      });\n    };\n\n    return this._fetch('cards', 'POST', addBody);\n  }\n\n  deleteCard(cardId) {\n    return this._fetch(`cards/${cardId}`, 'DELETE');\n  }\n\n  addLikeCard(cardId) {\n    return this._fetch(`cards/${cardId}/likes`, 'PUT');\n  }\n\n  deleteLikeCard(cardId) {\n    return this._fetch(`cards/${cardId}/likes`, 'DELETE');\n  }\n\n  editUserAvatar(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n\n    const addBody = () => {\n      return JSON.stringify({\n        avatar\n      });\n    };\n\n    return this._fetch('users/me/avatar', 'PATCH', addBody);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    return isLiked ? this._likeCard(cardId, 'PUT') : this._likeCard(cardId, 'DELETE');\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ilia/dev/mesto-react/my-app/src/components/Utils/Api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_fetch","path","method","addBody","url","fetch","body","then","res","ok","json","Promise","reject","status","_likeCard","cardId","getUserInfo","getInitialCards","editUserInfo","name","about","JSON","stringify","addCard","link","deleteCard","addLikeCard","deleteLikeCard","editUserAvatar","avatar","changeLikeCardStatus","isLiked"],"mappings":"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","sourcesContent":["export default class Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl\r\n        this._headers = options.headers\r\n    }\r\n\r\n    _fetch(path, method, addBody) {\r\n        const url = this._baseUrl + path\r\n        return fetch(url, {\r\n            method,\r\n            headers: this._headers,\r\n            body: addBody ? addBody() : null\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`)\r\n            })\r\n    }\r\n\r\n    _likeCard(cardId, method) {\r\n        return this._fetch(`cards/${cardId}/likes`, method)\r\n    }\r\n\r\n    getUserInfo() {\r\n        return this._fetch('users/me', 'GET')\r\n    }\r\n\r\n    getInitialCards() {\r\n        return this._fetch('cards', 'GET')\r\n    }\r\n\r\n    editUserInfo({ name, about }) {\r\n        const addBody = () => {\r\n            return JSON.stringify({\r\n                name,\r\n                about\r\n            })\r\n        }\r\n        return this._fetch('users/me', 'PATCH', addBody)\r\n    }\r\n\r\n    addCard({ name, link }) {\r\n        const addBody = () => {\r\n            return JSON.stringify({\r\n                name,\r\n                link\r\n            })\r\n        }\r\n        return this._fetch('cards', 'POST', addBody)\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return this._fetch(`cards/${cardId}`, 'DELETE')\r\n    }\r\n\r\n    addLikeCard(cardId) {\r\n        return this._fetch(`cards/${cardId}/likes`, 'PUT')\r\n    }\r\n  \r\n    deleteLikeCard(cardId) {\r\n        return this._fetch(`cards/${cardId}/likes`, 'DELETE')\r\n    }\r\n    \r\n    editUserAvatar({ avatar }) {\r\n        const addBody = () => {\r\n            return JSON.stringify({\r\n                avatar\r\n            })\r\n        }\r\n        return this._fetch('users/me/avatar', 'PATCH', addBody)\r\n    }\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        return isLiked ?\r\n            this._likeCard(cardId, 'PUT') :\r\n            this._likeCard(cardId, 'DELETE')\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}